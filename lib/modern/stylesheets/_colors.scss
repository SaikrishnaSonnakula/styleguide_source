// _colors.scss
//
// Color variables and background classes for all KP
// color values. Only include base colors in this file,
// not aliases.
//
// NOTE: if you want a variable here to be added to the docs
// please add it to the list in add_colors.js

$colors: (
  "interactive-blue": #003B71,
  "interactive-blue-dark": #3A60E9,
  "interactive-blue-darker": #3659D9,
  "disable-blue": #829cfb,
  "inky-blue": #0D1C3D,
  "dolphin": #6B7487,
  "graphite-dark": #D3D6DC,
  "graphite": #E9EBEE,
  "graphite-light": #F4F5F6,
  "pebble": #FAFAFA,
  "lilac": #8B4BBF,
  "fuchsia": #C11666,
  "tiger-lily": #D64400,
  "grass": #448400,
  "aqua": #00838A,
  "dusk": #5F6E90,
  "plum": #44116C,
  "acai": #7B1350,
  "burnt-sienna": #D14A0C,
  "deep-red": #B63125,
  "moss": #255200,
  "ocean": #005358,
  "midnight": #334161,
  "lavender": #E3C6FB,
  "rose": #FF9FBA,
  "tangerine": #FFEAC6,
  "leaf": #DBFDB7,
  "robin-egg": #D9FFFA,
  "sky": #BDECFF
);

@function color($key){
  @if not map-has-key($colors, $key){
    @if $key == 'kp-blue' {
      @warn "Color `#{$key}` is no longer supported, use interactive-blue";
      @return map-get($colors, "interactive-blue");
    }
    @warn "Color `#{$key}` is not defined in color map";
  }
  @return map-get($colors, $key);
}

@function set-text-color($bgcolor) {
  @if (lightness($bgcolor) > 50) {
    @return #000000;
  } @else {
    @return #ffffff;
  }
}

